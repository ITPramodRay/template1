{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport promiseMiddleware from \"redux-promise\";\nimport rootReducer from \"../reducers\";\nimport { Decrypt } from \"../modules\";\nconst persistantStorage = process.env.REACT_APP_PERSIST_STORE_DATA;\nlet middleware = \"\"; // if (process.env.NODE_ENV === 'PRODUCTION' || process.env.NODE_ENV === 'test') {\n\nif (process.env.NODE_ENV === \"PRODUCTION\") {\n  middleware = applyMiddleware(promiseMiddleware, thunk);\n} else {\n  // middleware = applyMiddleware(promiseMiddleware, thunk);\n  middleware = applyMiddleware(promiseMiddleware, thunk, createLogger());\n}\n\nlet persistantStore = {};\n\nif (persistantStorage == \"ENABLED\") {\n  persistantStore = sessionStorage._store ? Decrypt(sessionStorage._store, \"local\") : {};\n}\n\nexport default createStore(rootReducer, persistantStore, middleware);","map":{"version":3,"sources":["/home/sv/HDFCLife99/adcat-frontend-react-template/src/store/index.js"],"names":["createStore","applyMiddleware","createLogger","thunk","promiseMiddleware","rootReducer","Decrypt","persistantStorage","process","env","REACT_APP_PERSIST_STORE_DATA","middleware","NODE_ENV","persistantStore","sessionStorage","_store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYC,4BAAtC;AAEA,IAAIC,UAAU,GAAG,EAAjB,C,CACA;;AACA,IAAIH,OAAO,CAACC,GAAR,CAAYG,QAAZ,KAAyB,YAA7B,EAA2C;AACzCD,EAAAA,UAAU,GAAGV,eAAe,CAACG,iBAAD,EAAoBD,KAApB,CAA5B;AACD,CAFD,MAEO;AACL;AACAQ,EAAAA,UAAU,GAAGV,eAAe,CAACG,iBAAD,EAAoBD,KAApB,EAA2BD,YAAY,EAAvC,CAA5B;AACD;;AACD,IAAIW,eAAe,GAAG,EAAtB;;AACA,IAAIN,iBAAiB,IAAI,SAAzB,EAAoC;AAClCM,EAAAA,eAAe,GAAGC,cAAc,CAACC,MAAf,GACdT,OAAO,CAACQ,cAAc,CAACC,MAAhB,EAAwB,OAAxB,CADO,GAEd,EAFJ;AAGD;;AACD,eAAef,WAAW,CAACK,WAAD,EAAcQ,eAAd,EAA+BF,UAA/B,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport promiseMiddleware from \"redux-promise\";\nimport rootReducer from \"../reducers\";\nimport { Decrypt } from \"../modules\";\nconst persistantStorage = process.env.REACT_APP_PERSIST_STORE_DATA;\n\nlet middleware = \"\";\n// if (process.env.NODE_ENV === 'PRODUCTION' || process.env.NODE_ENV === 'test') {\nif (process.env.NODE_ENV === \"PRODUCTION\") {\n  middleware = applyMiddleware(promiseMiddleware, thunk);\n} else {\n  // middleware = applyMiddleware(promiseMiddleware, thunk);\n  middleware = applyMiddleware(promiseMiddleware, thunk, createLogger());\n}\nlet persistantStore = {};\nif (persistantStorage == \"ENABLED\") {\n  persistantStore = sessionStorage._store\n    ? Decrypt(sessionStorage._store, \"local\")\n    : {};\n}\nexport default createStore(rootReducer, persistantStore, middleware);\n"]},"metadata":{},"sourceType":"module"}